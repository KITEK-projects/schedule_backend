services:
  redis:
    image: redis:alpine
    container_name: omsktec-redis
    networks:
      - schedule

  postgres:
    image: postgres:latest
    container_name: omsktec-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - schedule
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 2s
      timeout: 1s
      retries: 5

  api-dev:
    container_name: omsktec-api
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./media
        target: /app/media
      - type: bind
        source: ./static
        target: /app/static
      - type: bind
        source: ./
        target: /app
        read_only: ${READ_ONLY_CODE:-false}
    networks:
      - schedule
    profiles:
      - dev

  
  api:
    container_name: omsktec-api
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./media
        target: /app/media
      - type: bind
        source: ./static
        target: /app/static
    networks:
      - schedule
    profiles:
      - prod

  web:
    container_name: omsktec-web
    image: nginx
    volumes:
      - ./web/dist/:/usr/share/nginx/html:ro
      - ./web/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    environment:
      - NGINX_PORT=80
    networks:
      - schedule
    profiles:
      - prod

networks:
  schedule:
    external: true
    name: schedule
    driver: bridge